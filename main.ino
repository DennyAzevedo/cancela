#include <Stepper.h>
#include <LiquidCrystal.h>
#include "talkie.h"

Talkie voice;

const int stepsPerRevolution = 200;  // change this to fit the number of steps per revolution

int dcMotor = 1;
int button = 0;

LiquidCrystal lcd(7, 6, 5, 4, 10, 2);
Stepper myStepper(stepsPerRevolution, 9, 12, 8, 11);

// Talkie library predefined words
const uint8_t spGOODBYE[]           PROGMEM ={0xA9,0x49,0xE1,0x54,0x91,0x2D,0xAF,0x22,0x07,0x55,0x29,0x69,0x7B,0xF2,0x18,0x38,0x32,0x3C, \
											  0xCB,0x4D,0x52,0xC8,0x4A,0x5A,0x65,0x99,0x52,0x21,0x6A,0x61,0x69,0x2E,0x45,0x46,0x2C,0x43, \
											  0xA9,0x3C,0x3D,0x1C,0x87,0x2A,0x3A,0xFB,0x50,0x6E,0x73,0xEB,0xDB,0xEC,0x6E,0x77,0xA3,0xF7, \
											  0xD1,0x4E,0x35,0xA2,0xCC,0x7E,0x74,0x3E,0xC6,0xA8,0x79,0x85,0xD1,0x86,0x64,0x65,0x16,0x95, \
											  0x5B,0x13,0x52,0xB0,0x65,0x94,0x2E,0xB5,0x4D,0x6A,0x55,0x65,0xF8,0x01,0x00,0x00};
											  
const uint8_t spPLEASE[]            PROGMEM ={0x0E,0xC8,0x81,0xD4,0x01,0x59,0x9B,0x8F,0xB0,0x48,0x69,0x57,0x73,0x3B,0xD2,0x24,0x2D,0x3D, \
											  0x24,0xCD,0x4A,0xBD,0x33,0x8F,0xF0,0xC7,0x3B,0x6B,0x79,0x4D,0x86,0x9C,0xFE,0x64,0x56,0xA3, \
											  0xAA,0x59,0x89,0x3D,0xBE,0xCC,0xA6,0xB7,0xA5,0xCF,0x9D,0x85,0xA5,0xDE,0xE6,0x3E,0xF5,0x29, \
											  0xB1,0x98,0xC5,0xE3,0xD2,0x07,0x13,0x10,0x56,0x1D,0xCB,0xF0,0x35,0x87,0x51,0xAE,0x75,0xC0, \
											  0x04,0xAC,0x06,0xF8,0x46,0xCD,0x00,0x3F,0x1A,0x19,0xE0,0x7B,0x0B,0x01,0x7C,0xA7,0xF6};
											  
const uint8_t spHELLO[]             PROGMEM ={0x00,0xC0,0x80,0x60,0x59,0x08,0x10,0x3D,0xB7,0x00,0x62,0x64,0x3D,0x55,0x4A,0x9E,0x66,0xDA, \
											  0xF6,0x56,0xB7,0x3A,0x55,0x76,0xDA,0xED,0x92,0x75,0x57,0xA3,0x88,0xA8,0xAB,0x02,0xB2,0xF4, \
											  0xAC,0x67,0x23,0x73,0xC6,0x2F,0x0C,0xF3,0xED,0x62,0xD7,0xAD,0x13,0xA5,0x46,0x8C,0x57,0xD7, \
											  0x21,0x0C,0x22,0x4F,0x93,0x4B,0x27,0x37,0xF0,0x51,0x69,0x98,0x9D,0xD4,0xC8,0xFB,0xB8,0x98, \
											  0xB9,0x56,0x23,0x2F,0x93,0xAA,0xE2,0x46,0x8C,0x52,0x57,0x66,0x2B,0x8C,0x07};
											  
const uint8_t spPRESS[]        		PROGMEM = {0x02,0x28,0x31,0x43,0x03,0x25,0xCB,0xBE,0xDC,0x5D,0xED,0x94,0x22,0x0E,0xCE,0x70,0xC9,0xBD, \
											   0xF2,0x9C,0xD5,0xBD,0x24,0xEF,0xC9,0xAB,0x77,0xF5,0x92,0x3E,0x27,0x6B,0xA1,0x25,0xD5,0x56, \
											   0xDF,0xEC,0x34,0x5D,0xA7,0x94,0xF9,0xEB,0x3B,0xEC,0x69,0xEE,0x75,0x15,0xC0,0x57,0xC1,0x02, \
											   0xF8,0x3D,0x5D,0x02,0x1A,0xD0,0x80,0x04,0x28,0x80,0x81,0xFF,0x07};
											   
const uint8_t spBUTTON[]        	PROGMEM = {0x10,0xA6,0x28,0xDD,0xCD,0x2D,0xD5,0x6A,0x8B,0xEE,0x6C,0xB1,0x4D,0xA7,0xAC,0x2E,0xA3,0x44, \
											   0x97,0xDC,0xA6,0xF5,0xCD,0x6B,0x34,0x46,0x13,0x32,0x89,0x50,0xEE,0x22,0xB2,0x01,0x20,0xA5, \
											   0xDD,0xA1,0x94,0xBB,0xB3,0xB6,0x0C,0x2F,0xA4,0xE6,0xF1,0xFA,0x96,0x8F,0x70,0x8F,0xC2,0x2A, \
											   0xE6,0x4A,0xDD,0xD3,0x2D,0x51,0x7A,0xDA,0xF3,0xAF,0x7B,0x47,0x63,0x51,0x73,0x67,0xE1,0x6B, \
											   0x46,0xDD,0x49,0xEB,0xFE,0x3F};
											   
const uint8_t spTHE[]           	PROGMEM = {0x6E,0xAD,0xCC,0x34,0x9C,0x97,0xE8,0x23,0xED,0x5D,0xA4,0xBB,0xF1,0x96,0xD9,0xEE,0xFA,0xD4, \
											   0x45,0x75,0xA6,0xC9,0xE6,0x5B,0xDF,0xE6,0x0E,0x67,0xAE,0x7C,0xD3,0x43,0xFB,0xEC,0x7D,0x9E, \
											   0xFD,0xFE,0x7F};


void setup() {
  pinMode(dcMotor, OUTPUT);
  lcd.begin(16, 2);
}

void loop() {
  //=============================
  // lcd
  lcd.clear();
  lcd.print("Press the button");
  lcd.setCursor(0, 1);
  lcd.print("----------------");
  
  //=============================
  // speech
  while(analogRead(0) > 700) // detects if a car approaches
	  delay(20);
  
  voice.say(spHELLO);
  delay(200);
  voice.say(spPLEASE);
  voice.say(spPRESS);
  voice.say(spTHE);
  voice.say(spBUTTON);

  //==============================
  // button
  while (digitalRead(button)) // receives a LOW signal if when the button is pressed
    delay(20);

  //============================
  // dc motor
  digitalWrite(dcMotor, HIGH);
  delay(1000);
  digitalWrite(dcMotor, LOW);

  //============================
  // lcd
  lcd.clear();
  lcd.print("    Withdraw    ");
  lcd.setCursor(0, 1);
  lcd.print("   your  card   ");

  //============================
  // speech
  voice.say(spGOODBYE);
  delay(500);
    
  //=========================
  // stepper motor
  int motorSpeed = 50;
  // set the motor speed:
  myStepper.setSpeed(motorSpeed);
  // step 1/4 of a revolution (90 degrees):
  myStepper.step(stepsPerRevolution / 4);

  //==========================
  // light sensor

  while(analogRead(0) < 700) // detects the car leaving
    delay(20);

  // waits 3 seconds to lower the barrier
  delay(3000);
  
  myStepper.setSpeed(motorSpeed);
  myStepper.step(-stepsPerRevolution / 4);
  
  
  
  
}
